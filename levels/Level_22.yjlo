import HRMLevel from "human-resource-machine-yjlo"
import HeapList

class Level22 extends HRMLevel {
	/*
	Year 22 - Zero Terminated Sum
	
	For each thing in the INBOX, send to the OUTBOX the full
	Fibonacci Sequence up to, but not exceeding that value.
	For example, if INBOX is 10, OUTBOX should be 1 1 2 3 5 8.
	What's a Fibonacci Sequence? Ask your boss, or a friendly search box.
	1 1 2 3 5 8 13 21 34 55 89 ...
	*/
	
	func IN() {
		return [20,10]
	}
	
	func FLOOR() {
		floor := HeapList()
		floor.put(9, 0)
		return floor
	}
	
	func OUT() {
		return [1,1,2,3,5,8,13,1,1,2,3,5,8]
	}
	
	func ALLOWED() {
		return ["inbox","outbox","copyfrom","copyto",
				"add","sub","bumpup","bumpdn","jump",
				"jumpz","jumpn"]
	}
}

solution :=
`
bumpup 9
a:
inbox
copyto 8
copyfrom 9
copyto 3
b:
copyto 4
outbox
copyfrom 8
sub 3
jumpn a
copyfrom 3
add 4
copyto 3
sub 4
jump b
`

level := Level22()
level.run(solution)
